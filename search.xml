<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python中容易忽视的小知识点</title>
      <link href="2020/python/"/>
      <url>2020/python/</url>
      
        <content type="html"><![CDATA[<h4 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面</h4><blockquote><p>本文不会记录<code>python</code>的详细知识，而只是记录笔者在回顾<code>python官方文档</code>时的笔记。</p></blockquote><h5 id="数组与字符串"><a class="markdownIt-Anchor" href="#数组与字符串"></a> 数组与字符串</h5><ul><li>切片的越界索引会被自动处理</li></ul><pre class="highlight"><code class="python">arr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]arr[<span class="hljs-number">2</span>:<span class="hljs-number">10</span>] <span class="hljs-comment"># 3,4,5</span></code></pre><h5 id="控制语句"><a class="markdownIt-Anchor" href="#控制语句"></a> 控制语句</h5><ul><li>在循环里修改序列的值，可以先创建一份拷贝副本<code>[:]</code></li></ul><pre class="highlight"><code class="python"><span class="hljs-keyword">for</span> w <span class="hljs-keyword">in</span> words[:]:    <span class="hljs-keyword">if</span> len(w) &gt; <span class="hljs-number">5</span>:        words.insert(<span class="hljs-number">0</span>, w)</code></pre><ul><li>循环语句（不是<code>if</code>子句哦）可能带有一个<code>else</code>子句，它在循环结束后被执行，但是不会在循环被break语句终止时执行。</li></ul><pre class="highlight"><code class="python"><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>):    <span class="hljs-keyword">if</span> n &gt; <span class="hljs-number">5</span>:        <span class="hljs-keyword">break</span>    print(n)<span class="hljs-keyword">else</span>:    print(<span class="hljs-string">"Over"</span>)<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span></code></pre><h5 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h5><ul><li>函数参数定义中，默认值只会执行一次，这条规则在默认值为可变对象（列表，字典等）时非常重要。</li></ul><pre class="highlight"><code class="python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">f</span><span class="hljs-params">(a, L=[])</span>:</span>    L.append(a)    <span class="hljs-keyword">return</span> aprint(f(<span class="hljs-number">1</span>)) <span class="hljs-comment"># [1]</span>print(f(<span class="hljs-number">2</span>)) <span class="hljs-comment"># [1,2]</span>print(f(<span class="hljs-number">3</span>)) <span class="hljs-comment"># [1,2,3]</span></code></pre><ul><li>可变参数<ul><li><code>*args</code>: 接收一个包含除了已有行参列表以外的位置参数的元组的行参</li><li><code>**args</code>: 接收一个字典，包含除了与已有行参相应的关键字参数以外的所有关键字参数</li></ul></li></ul><pre class="highlight"><code class="python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">cheeseshop</span><span class="hljs-params">(kind, *arguments, **keywords)</span>:</span>    <span class="hljs-keyword">for</span> arg <span class="hljs-keyword">in</span> arguments:        print(arg)    print(<span class="hljs-string">"-"</span> * <span class="hljs-number">40</span>)    <span class="hljs-keyword">for</span> kw <span class="hljs-keyword">in</span> keywords:        print(kw, <span class="hljs-string">":"</span>, keywords[kw])<span class="hljs-meta">&gt;&gt;&gt; </span>cheeseshop(<span class="hljs-string">"apple"</span>, <span class="hljs-string">"a1"</span>, <span class="hljs-string">"a2"</span>, client=<span class="hljs-string">"John"</span>, shopkeeper=<span class="hljs-string">"Bob"</span>)</code></pre><ul><li>使用<code>*</code>运算符编写函数调用可以从列表或者元组中解包参数</li></ul><pre class="highlight"><code class="python">args = [<span class="hljs-number">3</span>,<span class="hljs-number">6</span>]list(range(*args)) <span class="hljs-comment"># 等价于list(range(3,6))</span></code></pre><ul><li>文档字符串规范</li></ul><blockquote><p>第一行简要概述对象的目的，然后空一个行，后面分段阐述必要说明</p></blockquote><pre class="highlight"><code class="python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">function</span><span class="hljs-params">()</span>:</span>    <span class="hljs-string">"""Do nothing, but document it.    It doesn't do anything.    """</span>    <span class="hljs-keyword">pass</span><span class="hljs-meta">&gt;&gt;&gt; </span>print(function.__doc__)</code></pre><h5 id="类"><a class="markdownIt-Anchor" href="#类"></a> 类</h5><ul><li>实例变量用于每个实例的唯一数据，而类变量用于类的所有实例共享的属性和方法。</li><li>数据属性会覆盖掉具有相同名称的方法属性。</li><li>python有两个内置函数可被用于继承机制：<ul><li><code>isinstance()</code>来检查一个<strong>实例的类型</strong>，<code>isinstance(obj, int)</code></li><li>使用<code>issubclass()</code>来检查<strong>类的继承关系</strong>：<code>issubclass(bool, int)</code>为<code>True</code>，因为<code>bool</code>是<code>int</code>的子类，但是<code>issubclass(float, int)</code>为<code>False</code></li></ul></li><li>私有数据成员和方法的名字以双下划线<code>__</code>开头</li></ul><h5 id="迭代器与生成器"><a class="markdownIt-Anchor" href="#迭代器与生成器"></a> 迭代器与生成器</h5><ul><li>迭代器</li></ul><blockquote><p>迭代器类中定义一个<code>__iter__()</code> 方法来返回一个带有<code>__next__()</code> 方法的对象。 如果类已定义了<code>__next__()</code>，则<code>__iter__()</code> 可以简单地返回<code>self</code></p></blockquote><pre class="highlight"><code class="python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Reverse</span>:</span>    <span class="hljs-string">"""Iterator for looping over a sequence backwards."""</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span><span class="hljs-params">(self, data)</span>:</span>        self.data = data        self.index = len(data)    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__iter__</span><span class="hljs-params">(self)</span>:</span>        <span class="hljs-keyword">return</span> self    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__next__</span><span class="hljs-params">(self)</span>:</span>        <span class="hljs-keyword">if</span> self.index == <span class="hljs-number">0</span>:            <span class="hljs-keyword">raise</span> StopIteration        self.index = self.index - <span class="hljs-number">1</span>        <span class="hljs-keyword">return</span> self.data[self.index]</code></pre><ul><li>生成器</li></ul><ol><li>利用<code>yield</code>语句，在函数中需要返回值的地方用<code>yield</code>语句替代<code>return</code>，每次对生成器调用<code>next()</code>方法时，会从上次离开的位置恢复执行（会记住上次执行语句时的所有数据值）。</li></ol><pre class="highlight"><code class="python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">reverse</span><span class="hljs-params">(data)</span>:</span>    <span class="hljs-keyword">for</span> index <span class="hljs-keyword">in</span> range(len(data)<span class="hljs-number">-1</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">-1</span>):        <span class="hljs-keyword">yield</span> data[index]</code></pre><ol start="2"><li>用<code>生成器表达式</code></li></ol><pre class="highlight"><code class="python">[data[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(data)<span class="hljs-number">-1</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">-1</span>)]</code></pre><h5 id="装饰器"><a class="markdownIt-Anchor" href="#装饰器"></a> 装饰器</h5><p>理解<code>装饰器</code>之前，首先要明白在<code>python</code>中函数也是一个对象，也可以被赋值。</p><pre class="highlight"><code class="python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello</span><span class="hljs-params">()</span>:</span>    print(<span class="hljs-string">'hello world'</span>)sayHi = hello<span class="hljs-keyword">del</span> hellohello() <span class="hljs-comment"># NameError: name 'hello' is not defined</span>sayHi() <span class="hljs-comment"># hello world</span></code></pre><ul><li>需求</li></ul><blockquote><p>在一个函数执行之前做一点其他的事情，比如常见的日志等</p></blockquote><ul><li>实现</li></ul><pre class="highlight"><code class="python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">log</span><span class="hljs-params">(func)</span>:</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wrapper</span><span class="hljs-params">(*args, **kw)</span>:</span>        print(<span class="hljs-string">'call %s():'</span> %func.__name__)        <span class="hljs-keyword">return</span> func(*args, **kw)    <span class="hljs-keyword">return</span> wrapper<span class="hljs-meta">@log</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span><span class="hljs-params">()</span>:</span>    print(<span class="hljs-string">"hello world"</span>)run() <span class="hljs-comment"># call run():\n hello world</span></code></pre><p>可见，上面的方法中，<code>log</code>接受函数作为参数，同时，在里面定义的<code>wrapper</code>方法中以函数作为返回值。这样，就可以在函数<code>func</code>被执行之前，做任意操作了。</p><ul><li>另一点需求</li></ul><blockquote><p>但是，如果<code>log</code>也想接受一个额外的参数呢？</p></blockquote><ul><li>实现</li></ul><blockquote><p>再套一层外部封装</p></blockquote><pre class="highlight"><code class="python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">log</span><span class="hljs-params">(text)</span>:</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decorator</span><span class="hljs-params">(func)</span>:</span>        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wrapper</span><span class="hljs-params">(*args, **kw)</span>:</span>            print(<span class="hljs-string">'%s call %s():'</span> %(text, func.__name__))            <span class="hljs-keyword">return</span> func(*args, **kw)        <span class="hljs-keyword">return</span> wrapper    <span class="hljs-keyword">return</span> decorator<span class="hljs-meta">@log('iyuge2')</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span><span class="hljs-params">()</span>:</span>    print(<span class="hljs-string">"hello world"</span>)run() <span class="hljs-comment"># iyuge2 call run():\n hello world</span></code></pre><p>上面方法等价于<code>log('iyuge2')()</code>。</p><ul><li>另一个问题</li></ul><blockquote><p>上面那种装饰方法会改变<code>run.__name__</code>的值，除了在装饰器内部重新给<code>func.__name__</code>赋值之外，<code>python</code>提供了另一种新的方法实现。</p></blockquote><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> functools<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">log</span><span class="hljs-params">(func)</span>:</span><span class="hljs-meta">    @functools.wraps(func)</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wrapper</span><span class="hljs-params">(*args, **kw)</span>:</span>        print(<span class="hljs-string">'call %s():'</span> % func.__name__)        <span class="hljs-keyword">return</span> func(*args, **kw)    <span class="hljs-keyword">return</span> wrapper<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">log</span><span class="hljs-params">(text)</span>:</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decorator</span><span class="hljs-params">(func)</span>:</span><span class="hljs-meta">        @functools.wraps(func)</span>        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wrapper</span><span class="hljs-params">(*args, **kw)</span>:</span>            print(<span class="hljs-string">'%s %s():'</span> % (text, func.__name__))            <span class="hljs-keyword">return</span> func(*args, **kw)        <span class="hljs-keyword">return</span> wrapper    <span class="hljs-keyword">return</span> decorator</code></pre><p>其实，也就是<code>functools.wraps</code>也用了一层封装，将<code>__name__</code>属性重新改了回来。</p><h4 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h4><ul><li><a href="https://docs.python.org/zh-cn/">python中文文档</a></li><li><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017451662295584">装饰器·廖雪峰</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术区 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux脚本知识点总结</title>
      <link href="2020/linuxshell/"/>
      <url>2020/linuxshell/</url>
      
        <content type="html"><![CDATA[<h4 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面</h4><blockquote><p>本文所记录的所有shell知识都只针对于<code>Bash</code></p></blockquote><h4 id="指定shell解释器"><a class="markdownIt-Anchor" href="#指定shell解释器"></a> 指定<code>shell</code>解释器</h4><ol><li>在文件头部指定</li></ol><pre class="highlight"><code class="">#!/bin/bashecho "hello world"</code></pre><ol start="2"><li>在脚本执行时指定</li></ol><pre class="highlight"><code class="">/bin/bash ./myshell.sh</code></pre><p><strong>Note:</strong> 似乎不用指定也可以，是因为系统有默认的解释器，可以用<code>echo $SHELL</code>查看，这点跟<code>python</code>类似。在后文中，省略了指定解释器这一步骤。</p><h4 id="注释"><a class="markdownIt-Anchor" href="#注释"></a> 注释</h4><pre class="highlight"><code class=""># 这是一个单行注释:&lt;&lt;EOF这是多行注释这是多行注释EOF</code></pre><p><strong>Note:</strong> <code>EOF</code>可以用其他字符代替</p><h4 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h4><ul><li>变量定义</li></ul><blockquote><p>与<code>C / C++</code> 不同的是，变量定义时<strong>等号两边不能有空格</strong>，变量使用时用<code>${var_name}</code>或者<code>$var_name</code></p></blockquote><pre class="highlight"><code class="">name=iyuge2echo "hello ${name}"</code></pre><ul><li>只读变量</li></ul><blockquote><p>可以用<code>readonly</code>指定<strong>只读变量</strong></p></blockquote><pre class="highlight"><code class="">readonly name='iyuge2'name='iyuge8' # error: name: is read only</code></pre><ul><li>删除变量</li></ul><blockquote><p>使用<code>unset</code>删除变量，<strong>无法删除只读变量</strong></p></blockquote><p><strong>Note:</strong> 使用未定义变量不会报错，会输出空值。</p><h4 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h4><blockquote><p><code>shell</code>中最常用的两个数据类型就是<code>字符串</code>和<code>数字</code>.</p></blockquote><h6 id="字符串"><a class="markdownIt-Anchor" href="#字符串"></a> 字符串</h6><ul><li>字符串定义</li></ul><blockquote><p>字符串定义有<code>单引号</code>和<code>双引号</code>两种，两者的差异较大。</p></blockquote><ol><li>单引号</li></ol><blockquote><p>单引号字符串中无法使用变量、转义符号等，即所有的字符都会原样输出。<br>单引号中不能出现单个单引号，若出现成对单引号，则作为拼接字符串用。</p></blockquote><ol start="2"><li>双引号</li></ol><blockquote><p>双引号字符串中可以使用变量和转义字符。</p></blockquote><ul><li>字符串常用操作</li></ul><pre class="highlight"><code class="">name="iyuge2"str="hello "$name" !" # 拼接字符串echo ${#str} # 获取字符串长度echo ${str:1:4} # 输出: ello, 截取字符串，从位置1开始截取4个字符</code></pre><h5 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h5><ul><li>数组定义</li></ul><blockquote><p>括号表示数组，数组元素用<code>空格</code>符号（包括空格和换行）分开。</p></blockquote><ul><li>常用操作</li></ul><pre class="highlight"><code class="">arr = (1 2 3 4 5) # 定义数组echo $arr[0] # 访问数组echo $(#arr[*]) # 获取数组元素个数，也可以为 $(#arr[@])</code></pre><h4 id="运算表达式"><a class="markdownIt-Anchor" href="#运算表达式"></a> 运算表达式</h4><blockquote><p>原生bash不支持数学运算，可以借助外部命令实现</p></blockquote><ul><li>示例</li></ul><pre class="highlight"><code class="">val=`expr 2 + 2`echo $val</code></pre><p><strong>Note:</strong> <code>2 + 2</code>中运算符两边必须有空格</p><ul><li>关系运算符</li></ul><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>-eq</td><td>等于</td></tr><tr><td>-ne</td><td>不等于</td></tr><tr><td>-gt</td><td>大于</td></tr><tr><td>-lt</td><td>小于</td></tr><tr><td>-ge</td><td>大于等于</td></tr><tr><td>-le</td><td>小于等于</td></tr></tbody></table><ul><li>布尔运算符</li></ul><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>!</td><td>非</td></tr><tr><td>-o / ||</td><td>或</td></tr><tr><td>-a / &amp;&amp;</td><td>与</td></tr></tbody></table><ul><li>字符串运算符</li></ul><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td>等于</td></tr><tr><td>!=</td><td>不等于</td></tr><tr><td>-z</td><td>判断是否为空</td></tr><tr><td>-n</td><td>判段是否不为空</td></tr></tbody></table><h4 id="参数传递"><a class="markdownIt-Anchor" href="#参数传递"></a> 参数传递</h4><blockquote><p>通过命令行运行脚本时，一般会向脚本传递几个参数，因此在脚本中如何获取各个参数是此节的重点。</p></blockquote><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>$n</td><td>第n个参数，$0表示文件名</td></tr><tr><td>$#</td><td>传递到脚本的参数个数</td></tr><tr><td>$^</td><td>参数字符串</td></tr><tr><td>$$</td><td>脚本运行的当前进程ID号</td></tr><tr><td>$!</td><td>后台运行的最后一个进程ID号</td></tr><tr><td>$@</td><td>参数字符串，每个参数被加上了引号</td></tr><tr><td>$?</td><td>显示最后命令的退出状态</td></tr></tbody></table><h4 id="流程控制"><a class="markdownIt-Anchor" href="#流程控制"></a> 流程控制</h4><ul><li>if</li></ul><pre class="highlight"><code class="">if conditionthen    commandsfi</code></pre><p>写出一行</p><pre class="highlight"><code class="">if [ condition ]; then command; fi</code></pre><ul><li>if-else</li></ul><pre class="highlight"><code class="">if conditionthen    commandselse    commandsfi</code></pre><ul><li>for循环</li></ul><pre class="highlight"><code class="">for a in 1 2 3 4 5do    commandsdone</code></pre><ul><li>while语句</li></ul><pre class="highlight"><code class="">while conditiondo    commanddone</code></pre><ul><li>until循环</li></ul><pre class="highlight"><code class="">until conditiondo    commanddone</code></pre><ul><li>case语句</li></ul><pre class="highlight"><code class="">case v inc1    commandsc2    commandsesac</code></pre><p>同样支持<code>break</code>和<code>continue</code>语句。</p><h4 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h4><ul><li>定义格式</li></ul><blockquote><p>加中括号的是可有可无的</p></blockquote><pre class="highlight"><code class="">[ function ] func_name (){  action;  [return int;]}</code></pre><p><strong>Note:</strong> 函数参数的传递方式与上节“<a href="#%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92">参数传递</a>”一致</p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><ul><li><a href="https://www.runoob.com/linux/linux-shell-variable.html">RUNOOB.COM</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术区 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对话系统中点点滴滴</title>
      <link href="2020/survey-ds/"/>
      <url>2020/survey-ds/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术区 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 综述 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多模态学习各子领域的研究进展</title>
      <link href="2020/survey-mml/"/>
      <url>2020/survey-mml/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术区 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 综述 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习系列——感知机</title>
      <link href="2020/ml-perception/"/>
      <url>2020/ml-perception/</url>
      
        <content type="html"><![CDATA[<blockquote><p>感知机是一种分类算法，1957年就被提出，也算机器学习的开山代表作了。</p></blockquote><h3 id="前向过程"><a class="markdownIt-Anchor" href="#前向过程"></a> 前向过程</h3><p>给定输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∈</mo><msup><mi>R</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">x \in R^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>，则输出为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>∈</mo><mo stretchy="false">{</mo><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">f(x) = sign(w \cdot x + b) \in \{+1, -1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">+</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mclose">}</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>∈</mo><msup><mi>R</mi><mi>n</mi></msup><mo separator="true">,</mo><mi>b</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">w \in R^n, b \in R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">sign(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>为符号函数，即</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>+</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>⩾</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">sign(x) = \begin{cases}  +1, &amp; x \geqslant 0 \\  -1, &amp; x &lt; 0\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">+</span><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>即，当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo>&gt;</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">w\cdot x + b &gt;= 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f(x) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>， 当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">w\cdot x + b &lt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f(x) = -1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>。因此，感知机的决策面是<strong>线性的</strong>。</p><h3 id="反向过程"><a class="markdownIt-Anchor" href="#反向过程"></a> 反向过程</h3><p>感知机采用误分类点到决策面<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">w \cdot x + b = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>的总距离表示分类损失，因为只考虑误分类点，那么对于<strong>误分类点</strong>有：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">-y_i (w \cdot x_i + b) &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p>因此，所有误分类点（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">x_i \in M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>）到决策面的距离为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mo>∑</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">-\frac{1}{||w||}\sum y_i (w\cdot x_i + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.25744em;vertical-align:-0.936em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></span></p><p>不考虑<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{||w||}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight">∣</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mtight">∣</span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，则得到了感知机的损失函数：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi>M</mi></mrow></munder><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(w, b) = -\sum_{x_i \in M} y_i (w\cdot x_i + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4444410000000003em;vertical-align:-1.394436em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.394436em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></span></p><p>接着，利用<strong>梯度下降法</strong>极小化损失函数：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mo>▽</mo><mi>w</mi></msub><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi>M</mi></mrow></munder><msub><mi>y</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mo>▽</mo><mi>b</mi></msub><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi>M</mi></mrow></munder><msub><mi>y</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\bigtriangledown_w L(w, b) &amp;= -\sum_{x_i \in M} y_i \cdot x_i\\\bigtriangledown_b L(w, b) &amp;= -\sum_{x_i \in M} y_i\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.488882em;vertical-align:-2.494441em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.994441em;"><span style="top:-4.994441em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"><span class="mbin">▽</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"><span class="mbin">▽</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.494441em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.994441em;"><span style="top:-4.994441em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.394436em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.394436em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.494441em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h4 id="原始形式"><a class="markdownIt-Anchor" href="#原始形式"></a> 原始形式</h4><p>选定一个学习率<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\eta \in (0, 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>后，更新网络参数：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>w</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>←</mo><mi>w</mi><mo>+</mo><mi>η</mi><msub><mi>y</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>←</mo><mi>b</mi><mo>+</mo><mi>η</mi><msub><mi>y</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}w &amp;\leftarrow w + \eta y_i \cdot x_i \\b &amp;\leftarrow b + \eta y_i\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000000000000004em;vertical-align:-1.2500000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>Note:</strong> 感知机的极小化过程中，一次随机选取一个误分类点使其梯度下降，即采用随机梯度下降法。</p><p><strong>收敛性：</strong> 算法的收敛条件为<strong>训练集中没有误分类点</strong>，可以证明，<strong>对于线性可分数据集，感知机学习算法是可以收敛的</strong>。</p><h4 id="对偶形式"><a class="markdownIt-Anchor" href="#对偶形式"></a> 对偶形式</h4><blockquote><p>除了可以从原始形式求解外，也可以考虑问题的对偶形式。</p></blockquote><h3 id="优缺点"><a class="markdownIt-Anchor" href="#优缺点"></a> 优缺点</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术区 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习系列——开篇</title>
      <link href="2020/ml-start/"/>
      <url>2020/ml-start/</url>
      
        <content type="html"><![CDATA[<h4 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面</h4><p>在介绍各个方法时，主要记录其<strong>前向过程</strong>（预测和输出）和<strong>反向过程</strong>（学习策略），并且在文章后面总结其<strong>优缺点</strong>。很多内容都来自<a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a>，</p><ul><li>前向过程</li></ul><blockquote><p>给定输入，得出输出的过程</p></blockquote><ul><li>反向过程</li></ul><blockquote><p>得到输出之后，结合先验知识，更新模型参数的过程。</p></blockquote><h4 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h4><ul><li><a href="/2020/ml-perception/" title="机器学习系列——感知机">机器学习系列——感知机</a></li></ul><h4 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h4><ul><li>《统计学习方法》 李航</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术区 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用ssh免密登录服务器</title>
      <link href="2020/usessh/"/>
      <url>2020/usessh/</url>
      
        <content type="html"><![CDATA[<ul><li>在服务器端使用<code>ssh-keygen</code>生成密钥对，在用户的家目录中生成了一个 .ssh 的隐藏目录，内含两个密钥文件，id_rsa 为私钥，id_rsa.pub 为公钥。</li></ul><pre class="highlight"><code class="">cd ~/.sshcat id_rsa.pub &gt;&gt; authorized_keyschmod 600 authorized_keyschmod 700 ~/.ssh</code></pre><ul><li>设置 SSH，打开密钥登录功能，编辑 /etc/ssh/sshd_config 文件，进行如下设置：</li></ul><pre class="highlight"><code class="">RSAAuthentication yesPubkeyAuthentication yes</code></pre><ul><li>重启ssh服务</li></ul><pre class="highlight"><code class="">/etc/init.d/ssh restart</code></pre><ul><li>在本地~/.ssh/目录下新建一个文件（名字随便取）,将服务器端的私钥id_rsa里的全部内容复制到新建的文件中，并将该文件权限改为<code>0600</code></li></ul><blockquote><p>注意，windows用户“~”目录一般为<code>C:\Users\***</code></p></blockquote><ul><li>本地使用下面命令进行登陆</li></ul><pre class="highlight"><code class="">ssh xxx@xxx.xxx.xxx.xxx -p [端口号] -i ~/.ssh/[filename]</code></pre><ul><li>设置别称，方便下次登录，在用户配置文件中用<code>alias</code>给上述命令取一个别称。</li></ul><pre class="highlight"><code class="">vim ~/.bashrcalias xxx = 'ssh xxx@xxx.xxx.xxx.xxx -p [端口号] -i ~/.ssh/[filename]'</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术区 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vscode + Github + Hexo构建个人博客</title>
      <link href="2020/createblog/"/>
      <url>2020/createblog/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面</h3><blockquote><p>一直想着打造个人博客，总结知识，现在终于开始动手了。</p></blockquote><h3 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h3><p><strong>前后尝试了两种不同的写作方式</strong></p><ol><li><a href="https://github.com/getgridea/gridea">静态博客写作客户端Gridea</a></li></ol><blockquote><p>这种方式非常简单，可以像写笔记一样写博客，省去了很多麻烦。但目前支持的主题比较少，定制化功能也不够完整，不能支持<code>vim</code>快捷键，试用了一段时间后还是放弃了，没用过的还是非常推荐试一下的。</p></blockquote><ol start="2"><li>基于hexo构建博客站</li></ol><blockquote><p>也比较简单，主题丰富，浅层次定制化比较简单，但若想深度定制化就需要前端知识了。（目前这块还比较薄弱，逐步完善ing…）<br>关于如何基于Hexo构建已经有非常多文章介绍了:<br><a href="https://yafine-blog.cn/posts/4ab2.html">Hexo+github 搭建博客 (超级详细版，精细入微)</a><br><a href="https://blog.licardo.cn/posts/36692/">Hexo 搭建个人博客详细教程</a></p></blockquote><p>这里，我主要针对第二种方式介绍自己<strong>使用到的工具</strong>以及期间<strong>碰到的问题和解决方式</strong></p><h3 id="正文"><a class="markdownIt-Anchor" href="#正文"></a> 正文</h3><h4 id="使用到的工具"><a class="markdownIt-Anchor" href="#使用到的工具"></a> 使用到的工具</h4><ul><li>Github Page</li></ul><blockquote><p>托管博客网站</p></blockquote><ul><li>Hexo</li></ul><blockquote><p>建站框架，拥有丰富的<a href="https://hexo.io/themes/">主题</a>，这里推荐两款主题: <a href="https://github.com/blinkfox/hexo-theme-matery">Matery</a> 和 <a href="https://github.com/jerryc127/hexo-theme-butterfly">butterfly</a></p></blockquote><ul><li>阿里云 / 腾讯云 / 华为云 / …</li></ul><blockquote><p>域名服务商，提供域名服务，可以自定义博客域名，而不是使用默认的[<a href="http://username.github.io">username.github.io</a>]。</p></blockquote><ul><li>VScode</li></ul><blockquote><p>博客编辑，一款越来越喜欢的编辑神器。<br>安装插件<code>Markdown Preview Enhanced</code>后开启markdown预览功能，就很舒服了！</p></blockquote><h4 id="问题-解决方案"><a class="markdownIt-Anchor" href="#问题-解决方案"></a> 问题 &amp; 解决方案</h4><h5 id="1-如何自定义域名"><a class="markdownIt-Anchor" href="#1-如何自定义域名"></a> 1. 如何自定义域名</h5><ul><li>注册一个域名</li></ul><blockquote><p>我选择了阿里云，学生注册第一年免费试用，其他的应该也有类似优惠。</p></blockquote><ul><li>解析域名，两种方式可选</li></ul><blockquote><p>(1) 用A记录，即使用ip地址，ip地址可以用<code>dig username.github.io +noall +answer</code>获得，一般会得到多个ip地址，每个都添加一个A记录即可。<br>(2) 用CNAME记录，即别名转换，一般会添加两条记录，这样就可以通过多种方式访问自己的博客了。<br><img src="cname.png" alt="CNAME"></p></blockquote><ul><li>添加到github中</li></ul><blockquote><p>在[<a href="http://username.github.io">username.github.io</a>]的setting页面下，输入自己设置的域名（只需要到二级域名即可），第一次时HTTPS会变成不可选，仔细读提示后发现要过一段时间才能选择。（我等了大概半小时就可以了）<br><img src="github-dns.png" alt="github-dns"></p></blockquote><ul><li>添加CNAME文件</li></ul><blockquote><p>上面操作结束后，每一次重新部署(<code>hexo d</code>)都会自动覆盖掉上一步的域名填入，这里需要在<code>source</code>目录下新建一个<code>CNAME</code>文件（无后缀），里面就只需填入注册的域名名字即可。<br>注：是在source目录下新建，不是根目录下！</p></blockquote><h5 id="2-vscode中的hexo快捷键设置"><a class="markdownIt-Anchor" href="#2-vscode中的hexo快捷键设置"></a> 2. vscode中的hexo快捷键设置</h5><blockquote><p>利用<code>vscode</code>的task机制，创建两个最常用功能的快捷键“本地预览”和“远程部署” 。参考自<a href="https://blog.vlitter.top/post/make-vscode-be-the-best-editor-for-hexo/">将VS Code打造成Hexo博客的最佳编辑器</a></p></blockquote><p>一般地，除了个性化设置外，正常博客编写只需要用到<code>_posts</code>目录了，因此推荐在<code>_posts</code>目录下进行下面操作</p><ul><li>定义功能命令脚本</li></ul><p>(1) 新建预览功能脚本：<code>bins &gt; preview.sh</code></p><pre class="highlight"><code class="">export PATH=/usr/local/lib/nodejs/node-$VERSION-$DISTRO/bin:$PATHhexo server</code></pre><p>(2) 新建部署功能脚本：<code>bins &gt; post.sh</code></p><pre class="highlight"><code class="">export PATH=/usr/local/lib/nodejs/node-$VERSION-$DISTRO/bin:$PATHhexo clean &amp;&amp; hexo generate --deploy</code></pre><p><strong>Note:</strong> 因为vscode中的task打开的是非交互式的终端，因此需要用<code>export</code>加载<code>node</code>环境，否则会报<code>node</code>找不到的异常。貌似<code>windows</code>中是不需要这样的。</p><ul><li>定义任务配置</li></ul><blockquote><p>新建<code>.vscode &gt; tasks.json</code>文件，里面定义用到的任务配置。</p></blockquote><pre class="highlight"><code class="">{    "version": "2.0.0",    "tasks": [        {            "label": "HexoPost",            "type": "shell",            "command": "${workspaceRoot}/bins/post.sh",                   "group": {                "kind": "build",                "isDefault": true            },            "presentation": {                "echo": true,                "reveal": "always",                "panel": "new"            }        },        {            "label": "HexoPreview",            "type": "shell",            "command": "${workspaceRoot}/bins/preview.sh",                   "group": {                "kind": "test",                "isDefault": true            },            "presentation": {                "echo": true,                "reveal": "always",                "panel": "new"            }        },    ]}</code></pre><p><strong>Note:</strong> 上述任务重新定义了<code>build</code>和<code>test</code>两个任务。</p><ul><li>重定义快捷键</li></ul><blockquote><p>打开键盘快捷键更改界面（<code>mac</code>下是输入<code>command+k</code>后紧接着输入<code>command+s</code>）。<br>在打开的界面中输入<code>任务</code>两个字，找到对应条目双击后就能更改快捷键设置。<br><img src="task-map.png" alt=""></p></blockquote><h5 id="3-posts中文档的目录设置"><a class="markdownIt-Anchor" href="#3-posts中文档的目录设置"></a> 3. posts中文档的目录设置</h5><blockquote><p>一般新建的文档都直接在<code>_posts</code>目录下，如果时间长了，则文档结构有点乱，因此希望按照自己的需求在这个目录下设置不同的目录结构。这里希望改成按照年份组织文档。</p></blockquote><ul><li>最简单的方法<br>更改<code>hexo</code>根目录下的<code>_config.yml</code>中的<code>permalink</code>属性，将其改为<code>:year/:month/:day/:name/</code>。即将后面的<code>:title</code>改为了<code>:name</code>。</li></ul><p><strong>Note:</strong> <code>permalink</code>表示浏览器搜索栏中显示的文档路径编排方式，其中，<code>:title</code>表示的是文档相对于<code>_posts</code>的相对路径，而<code>:name</code>是文档的名称。</p><h5 id="4-如何实现自定义页面之间的相互跳转"><a class="markdownIt-Anchor" href="#4-如何实现自定义页面之间的相互跳转"></a> 4. 如何实现自定义页面之间的相互跳转</h5><p>不能直接用markdown的语法，可以在需要添加跳转的地方插入<code>{% post_link 跳转文件相对地址（不要文件后缀） 显示名字（可选） %}</code></p><h5 id="5-改用katex进行公式渲染"><a class="markdownIt-Anchor" href="#5-改用katex进行公式渲染"></a> 5. 改用<code>Katex</code>进行公式渲染</h5><blockquote><p>貌似<code>Mathjex</code>与<code>Hexo</code>的兼容性不好，在公式生成时，换行等功能无法正确使用，加上自己<code>vscode</code>的公式引擎也是<code>Katex</code>。因此，考虑将公式渲染引擎改为<code>Katex</code>。</p></blockquote><ul><li>卸载<code>hexo</code>自带的<code>hexo-renderer-marked</code>，安装<code>hexo-renderer-markdown-it-plus</code></li></ul><pre class="highlight"><code class="">npm un hexo-renderer-marked --savenpm i hexo-renderer-markdown-it-plus --save</code></pre><ul><li>在根目录的<code>_config.yml</code>中写入配置</li></ul><pre class="highlight"><code class="">markdown_it_plus:highlight: truehtml: truexhtmlOut: truebreaks: truelangPrefix:linkify: truetypographer:quotes: “”‘’pre_class: highlight</code></pre><ul><li>加入<code>css style</code>文件</li></ul><blockquote><p>这里，因为想利用到<code>matery</code>主题自带的<code>mathjex</code>控制语句，所以在<code>layout/post.ejs</code>中修改</p></blockquote><p>将文末的</p><pre class="highlight"><code class="">&lt;script src="&lt;%- theme.mathjax.cdn %&gt;"&gt;&lt;/script&gt;</code></pre><p>改为</p><pre class="highlight"><code class="">&lt;link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.11.1/katex.min.css"&gt;</code></pre><ul><li>参考<br><a href="https://github.com/blinkfox/hexo-theme-matery/issues/119">MathJax无法渲染多行公式</a><br><a href="https://blog.csdn.net/qq_34769162/article/details/107687801">hexo主题渲染latex公式之多行公式显示问题</a></li></ul><h3 id="写在后面"><a class="markdownIt-Anchor" href="#写在后面"></a> 写在后面</h3><blockquote><p>作为一个新人，一切还不熟悉，慢慢长大，逐渐完善自己的贝壳屋！</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术区 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 说明文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode使用Tips</title>
      <link href="2020/usevscode/"/>
      <url>2020/usevscode/</url>
      
        <content type="html"><![CDATA[<h4 id="配置文件"><a class="markdownIt-Anchor" href="#配置文件"></a> 配置文件</h4><blockquote><p>vscode中的配置分用户区（User）和工作区（Workspace）。<br>覆盖范围：用户区 &gt; 工作区<br>优先级：工作区 &gt; 用户区</p></blockquote><h4 id="插件推荐"><a class="markdownIt-Anchor" href="#插件推荐"></a> 插件推荐</h4><blockquote><p>编程语言相关插件就不说了，直接按照官方推荐来就好了。</p></blockquote><h5 id="remote-development"><a class="markdownIt-Anchor" href="#remote-development"></a> Remote Development</h5><blockquote><p>一个远程连接工具包，目前只用到了里面的<code>remote-ssh</code>，用于连接服务器。<br>可以直接将服务器上一切在本地vscode中使用，简直不要太爽！！！</p></blockquote><p><strong>连接方式</strong><br>左侧点击插件-&gt;点击齿轮-&gt;修改配置信息</p><pre class="highlight"><code class="">Host 随便取个名    HostName [主机ip]    User [用户名]    IdentityFile [如果设置了ssh密钥登陆，这里填写密钥地址，否则，可以不用此项]</code></pre><blockquote><p><strong>注意</strong>: 连接成功后，会在服务器的用户根目录下创建一个<code>.vscode-server</code>文件夹，里面存放远端vscode配置信息。第一次连接或者vscode更新时，服务器需要连网。<br>传送门：<a href="./ssh.md">如何通过ssh免密登录服务器</a></p></blockquote><h5 id="配色和字体推荐"><a class="markdownIt-Anchor" href="#配色和字体推荐"></a> 配色和字体推荐</h5><blockquote><p>配色推荐：Monokai Pro(直接在扩展中心安装即可)<br>字体推荐：<a href="https://github.com/tonsky/FiraCode">FiraCode</a> [<a href="https://github.com/tonsky/FiraCode/wiki">安装教程</a>]</p></blockquote><p>显示效果：<br><img src="fonts-theme.png" alt="vscode配色效果"></p><h5 id="settings-sync"><a class="markdownIt-Anchor" href="#settings-sync"></a> Settings Sync</h5><blockquote><p>将vscode配置（包括插件）同步到github gist中，方便一键移植。<br><a href="https://juejin.im/post/5b9b5a6f6fb9a05d22728e36">配置教程</a><br>上传配置快捷键: shift+Alt/option+U<br>下载配置快捷键: shift+Alt/option+D</p></blockquote><h5 id="其他插件"><a class="markdownIt-Anchor" href="#其他插件"></a> 其他插件</h5><table><thead><tr><th style="text-align:center">插件</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">Chinese Language Pack</td><td style="text-align:center">vscode汉化包</td></tr><tr><td style="text-align:center">Code Runner</td><td style="text-align:center">一键运行所有程序</td></tr><tr><td style="text-align:center">Code Spell Checker</td><td style="text-align:center">英文单词检查插件</td></tr><tr><td style="text-align:center">Edit csv</td><td style="text-align:center">csv文件可视化编辑器</td></tr><tr><td style="text-align:center">filesize</td><td style="text-align:center">在底部bar中显示文件大小</td></tr><tr><td style="text-align:center">github pull requests</td><td style="text-align:center">集成github</td></tr><tr><td style="text-align:center">LaTex Workshop</td><td style="text-align:center">集成LaTex</td></tr><tr><td style="text-align:center">Live Share</td><td style="text-align:center">远程协同编程</td></tr><tr><td style="text-align:center">Path Autocomplete</td><td style="text-align:center">路径自动补全插件</td></tr><tr><td style="text-align:center">Vim</td><td style="text-align:center">vim快捷键</td></tr><tr><td style="text-align:center">TabNine</td><td style="text-align:center">AI补代码</td></tr><tr><td style="text-align:center">Markdown Preview Enhanced</td><td style="text-align:center">markdown预览和导出神器</td></tr></tbody></table><h4 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h4><h5 id="无法更新"><a class="markdownIt-Anchor" href="#无法更新"></a> 无法更新</h5><blockquote><p><code>sudo chown $USER ~/Library/Caches/com.microsoft.VSCode.ShipIt/</code></p></blockquote><h5 id="vs-code报错module-xx-has-no-xx-member-pylintno-member"><a class="markdownIt-Anchor" href="#vs-code报错module-xx-has-no-xx-member-pylintno-member"></a> VS Code报错Module ‘xx’ has no ‘xx’ member pylint(no-member)</h5><blockquote><p>在设置中添加<code>"python.linting.pylintArgs": ["--generate-members"]</code></p></blockquote><h5 id="使用vim的中文输入法切换问题"><a class="markdownIt-Anchor" href="#使用vim的中文输入法切换问题"></a> 使用vim的中文输入法切换问题</h5><blockquote><p>参考<a href="https://www.zhihu.com/question/303850876">知乎</a></p></blockquote><ul><li>安装<a href="https://link.zhihu.com/?target=https%3A//github.com/daipeihust/im-select%23installation">im-select</a></li><li>在配置文件中加入</li></ul><ol><li>mac</li></ol><pre class="highlight"><code class="">"vim.autoSwitchInputMethod.enable": true,"vim.autoSwitchInputMethod.defaultIM": "com.apple.keylayout.US","vim.autoSwitchInputMethod.obtainIMCmd": "/usr/local/bin/im-select","vim.autoSwitchInputMethod.switchIMCmd": "/usr/local/bin/im-select {im}"</code></pre><ol start="2"><li>win</li></ol><pre class="highlight"><code class="">"vim.autoSwitchInputMethod.enable": true,"vim.autoSwitchInputMethod.defaultIM": "1033","vim.autoSwitchInputMethod.obtainIMCmd": "C:\\im-select\\im-select.exe", "vim.autoSwitchInputMethod.switchIMCmd": "C:\\im-select\\im-select.exe {im}"</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术区 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 说明文档 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开始的地方</title>
      <link href="2020/start/"/>
      <url>2020/start/</url>
      
        <content type="html"><![CDATA[<blockquote><p>象牙塔的日子就要看到终点了，一个全新的起点也即将开始。总觉得要慢慢开始写点啥了，雁过留痕，风过留声。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 杂想间 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 起点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>由置换操作&quot;a,b = b,a&quot;引发的一些思考</title>
      <link href="2020/pythonreplacement/"/>
      <url>2020/pythonreplacement/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在C或者C++中，交换两个变量的值，一般需要借由中间变量实现（某些情况下可以直接通过加减实现，但这种不够安全）。<br>但是，在Python中，竟可以直接通过“a,b = b,a”实现，这是如何做到的呢？以及这种实现方式有什么需要注意的吗？</p></blockquote><a id="more"></a><h4 id="如何做到的"><a class="markdownIt-Anchor" href="#如何做到的"></a> 如何做到的？</h4><blockquote><p>核心在于，python中变量存储的并不直接存储数值，而是存储这个值的引用（也可以理解为内存地址）！</p></blockquote><ul><li>示例：</li></ul><pre class="highlight"><code class="python">a,b = <span class="hljs-number">1</span>,<span class="hljs-number">2</span>print(<span class="hljs-string">"-----置换前------"</span>)print(a,b)print(<span class="hljs-string">"a的地址:"</span>, id(a))print(<span class="hljs-string">"b的地址:"</span>, id(b))a,b = b,aprint(<span class="hljs-string">"-----置换后------"</span>)print(a,b)print(<span class="hljs-string">"a的地址:"</span>, id(a))print(<span class="hljs-string">"b的地址:"</span>, id(b))</code></pre><pre class="highlight"><code class="">-----置换前------1 2a的地址: 94538685764384b的地址: 94538685764416-----置换后------2 1a的地址: 94538685764416b的地址: 94538685764384</code></pre><blockquote><p>所以，在python中交换两个数值时，<strong>内存地址上存储的数值并不发生变化</strong>，而是直接对变量重新赋值即可（地址值）。因此，python的置换操作不仅仅支持两个值，还支持多个值之间的置换。</p></blockquote><h4 id="需要注意的地方"><a class="markdownIt-Anchor" href="#需要注意的地方"></a> 需要注意的地方</h4><blockquote><p>这两天在刷Leetcode时， <a href="https://leetcode-cn.com/problems/first-missing-positive/">题目：缺失的第一个正数</a>，碰到了一个问题…</p></blockquote><ul><li>示例1</li></ul><pre class="highlight"><code class="python">nums = [<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]nums[nums[<span class="hljs-number">2</span>]<span class="hljs-number">-1</span>], nums[<span class="hljs-number">2</span>] = nums[<span class="hljs-number">2</span>], nums[nums[<span class="hljs-number">2</span>]<span class="hljs-number">-1</span>]print(nums)</code></pre><pre class="highlight"><code class="">[3, 2, 1, 4, 5]</code></pre><p>置换成功，似乎没有什么问题，但我们交换一下置换的顺序。</p><ul><li>示例2</li></ul><pre class="highlight"><code class="python">nums = [<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]nums[<span class="hljs-number">2</span>], nums[nums[<span class="hljs-number">2</span>]<span class="hljs-number">-1</span>] = nums[nums[<span class="hljs-number">2</span>]<span class="hljs-number">-1</span>], nums[<span class="hljs-number">2</span>]print(nums)</code></pre><pre class="highlight"><code class="">[2, 1, 1, 4, 5]</code></pre><blockquote><p>啊？！结果怎么就完全不一样了？直觉告诉我们，应该是既有对<code>nums[2]</code>的赋值，又有对<code>nums[2]</code>的引用了。所以这两个冲突了？两个示例的区别就是赋值在前与在后的问题。<br>目前，关于这个问题我在python文档中还没有找到严格的定义，下面说一下碰到这种问题时，我们从<code>执行逻辑</code>的角度怎么看待。</p></blockquote><p>我们可以将<code>nums[2], nums[nums[2]-1] = nums[nums[2]-1], nums[2]</code>这行语句拆解成以下几个步骤进行：</p><ol><li>计算等式右边的值，得到<code>nums[2], nums[nums[2]-1] = 1, 2</code>。</li><li>赋值语句从左往右依次执行。首先得到<code>nums[2]=1</code>（<strong>注意这个时候<code>nums[2]</code>的值已经变了</strong>），接着计算<code>nums[nums[2]-1]=nums[1-1]=nums[0]=2</code>。</li><li>所以，最终的值变成了<code>[2,1,1,4,5]</code></li></ol><p>总结一下，就是<code>先计算得到等号右边的所有数值，再将值依次赋给等号的左边</code>。</p><h4 id="一个思考"><a class="markdownIt-Anchor" href="#一个思考"></a> 一个思考</h4><blockquote><p>如果python中变量存储的是地址值的话，那么列表中元素的地址是连续的吗？</p></blockquote><ul><li>答案</li></ul><blockquote><p>不是的</p></blockquote><p>在列表刚刚初始化时，可能会发现元素的地址似乎确实是连续的</p><pre class="highlight"><code class="python">nums = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">5</span>):    print(id(nums[i]))</code></pre><pre class="highlight"><code class="">9453868576438494538685764416945386857644489453868576448094538685764512</code></pre><p>但如果我们交换其中两个元素的位置，就会发现地址不连续了。</p><pre class="highlight"><code class="python">nums[<span class="hljs-number">1</span>], nums[<span class="hljs-number">2</span>] = nums[<span class="hljs-number">2</span>], nums[<span class="hljs-number">1</span>]print(nums)<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">5</span>):    print(id(nums[i]))</code></pre><pre class="highlight"><code class="">[1, 3, 2, 4, 5]9453868576438494538685764448945386857644169453868576448094538685764512</code></pre><p>可以看到，<code>nums[1]</code>与<code>nums[2]</code>的地址顺序就变了。</p><blockquote><p>其实，刚开始时是连续的是因为Python中给List分配空间时采用“逐步扩增”的增量式方法。但地址连不连续对python中的List中元素的访问影响并不大。还是那个原因，python中变量存储的是地址值，而不是实际的元素值。所以只要地址值存放的位置是连续的就可以支持<code>随机访问</code>和<code>切片操作</code>了。这样其实也有一个问题，就是地址的不连续还是会带来内存访问的开销…</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术区 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
